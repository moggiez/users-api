name: "Pull Request"

on:
  pull_request:
    branches:
      - master

jobs:
  lint_and_test:
    name: "Lint & Test"
    runs-on: ubuntu-latest
    environment: production
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_DEFAULT_REGION: "eu-west-1"

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: https://npm.pkg.github.com/
          scope: "@moggiez"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: eu-west-1

      - name: Build lambdas and libs dev
        run: make build-dev
        env:
          NODE_AUTH_TOKEN: ${{secrets.GH_PAT_NPM}}

      - name: Install NPM modules
        run: npm i

      - name: Lint code
        run: make lint

      - name: Install Jest
        run: npm i -g jest

      - name: Run test
        run: make test

      - name: Run coverage report
        uses: artiomtr/jest-coverage-report-action@v2.0-rc.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          test-script: npm run test
          #   threshold: 80 # optional parameter

  terraform:
    name: "Infrastructure as code"
    runs-on: ubuntu-latest
    environment: production
    env:
      TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
      TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_DEFAULT_REGION: "eu-west-1"

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: setup-git-ssh-key
        uses: webfactory/ssh-agent@v0.5.2
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.8

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: make infra-init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_DEFAULT_REGION: "eu-west-1"

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Lint (terraform code only)
        run: cd infra && terraform fmt -check

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: https://npm.pkg.github.com/
          scope: "@moggiez"

      - name: Build lambdas
        run: make build
        env:
          NODE_AUTH_TOKEN: ${{secrets.GH_PAT_NPM}}

      # Build packages and generates an execution plan for Terraform
      - name: Preview deployment
        run: make infra-preview
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_DEFAULT_REGION: "eu-west-1"
